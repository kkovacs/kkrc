i HISTCONTROL=ignoreboth set -o vi;unset -f command_not_found_handle;unset HISTFILE;HISTTIMEFORMAT="%F %T ";PS1='\[\033[00;'$([[ "$UID" -eq 0 ]]&&echo -n 31||echo -n 34)'m\]\u\[\033[00m\]@\[\033[00;32m\]\h \[\033[00;33m\]\w \[\033[00;36m\][\j]\[\033[00m\]\$ ';export PROMPT_COMMAND="printf '\a'";export EDITOR=vim;export PAGER=less;export LC_ALL="en_US.UTF-8";export LANG="en_US.UTF-8";export LESSHISTFILE=/dev/null;export CLICOLOR=1;export LSCOLORS=ExFxCxDxBxegedabagacad;export LS_COLORS="di=1;34:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43";export QUOTING_STYLE=shell-escape;export VIMINIT=":set nobackup noswapfile encoding=utf8 viminfo=";alias vim="vim -n -i NONE";alias s="screen -xR";alias l="ls -lrt";alias la="ls -lrtA -I*";alias ll="ls -lrtA";lll(){ ls -lrtA --color "$@"|less -FXRn +G;};alias h="history";alias hc="history -c";alias psql="INPUTRC=/dev/fd/9 psql 9<<<'set editing-mode vi'";alias mysql="INPUTRC=/dev/fd/9 mysql 9<<<'set editing-mode vi'";alias tig='TIGRC_USER=/dev/fd/9 tig 9<<<"set main-options = --all${IFS}set main-view = line-number:no,interval=5 id:yes date:relative author:abbreviated commit-title:yes,graph,refs,overflow=no"';alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative --all --date-order";alias gs="git status -sb";function git { if [[ -O "$(command git rev-parse --show-toplevel)/.git"||" log blame diff show status init clone " =~ " $1 " ]];then command git -c user.email="$USER@$HOSTNAME" -c user.name="$USER" "$@";else echo "Please use the unix user that owns .git";return 1;fi };m(){ mount "$@"|grep '^\/dev\/';};d(){ df -h "$@"|grep -v 'snap\|tmpfs\|udev';};[ -L $(type -p grep) ]||alias grep="grep --color";[ -L $(type -p less) ]||alias less="less -Xn";[ -f /usr/share/bash-completion/bash_completion ]&&. /usr/share/bash-completion/bash_completion;shopt -s globstar cdspell dirspell checkwinsize cmdhist;bind 'TAB:menu-complete';bind '"\e[Z": menu-complete-backward';bind 'set menu-complete-display-prefix on';bind 'set show-all-if-ambiguous on';bind 'set show-all-if-unmodified on';bind 'set completion-ignore-case on';bind 'set match-hidden-files off';bind 'set colored-stats on';bind 'set colored-completion-prefix on';bind 'set visible-stats on';bind 'set completion-prefix-display-length 1';bind 'set skip-completed-text on';bind 'set history-preserve-point on';bind 'set mark-symlinked-directories on';bind 'space:magic-space';bind -m vi '"\200":previous-history';bind -m vi '"\201":next-history';bind -m vi '"\202":end-of-line';bind -m vi 'k:"\200\202"';bind -m vi 'j:"\201\202"';bind -m vi '"\e[A":"\200\202"';bind -m vi '"\e[B":"\201\202"';bind -m vi-insert '"\e[A":history-search-backward';bind -m vi-insert '"\e[B":history-search-forward';bind -m vi-insert "C-l:clear-screen";compopt -o bashdefault cd;_scx(){ COMP_WORDS=("systemctl" "$1" "${COMP_WORDS[@]:1}");((COMP_CWORD++));_systemctl;};_jcx(){ COMP_WORDS=("journalctl" "$1" "${COMP_WORDS[@]:1}");((COMP_CWORD++));_journalctl;};sc(){ SC="${@: -1}";systemctl "$@";};complete -F _systemctl sc;usc(){ SC="${@: -1}";systemctl --user "$@";};_usc(){ _scx --user;};complete -F _usc usc;scl(){ systemctl list-units --type service --all;};sdr(){ [ $UID -eq 0 ]&&systemctl daemon-reload||systemctl --user daemon-reload;};jc(){ SC="${1:-${SC}}";journalctl -xu "$SC";};_jc(){ _jcx "--unit";};complete -F _jc jc;jcf(){ SC="${1:-${SC}}";journalctl -xefu "$SC";};complete -F _jc jcf;ujc(){ SC="${1:-${SC}}";journalctl -x --user-unit "$SC";};_ujc(){ _jcx "--user-unit";};complete -F _ujc ujc;stail(){ SC="${2:-${SC}}";sdr;systemctl reset-failed "$SC";journalctl -n 0 -xfu "$SC"&systemctl "$1" "$SC";scs;fg %journalctl;};_mksc(){ eval "$1() { SC=\"\${1:-\${SC}}\" ; $2 $3 ${@:4} \"\$SC\" ; }";eval "_$1() { _scx \"$3\" ; }";eval "complete -F _$1 $1";};_mksc scs systemctl status -l;_mksc sc0 systemctl stop;_mksc sc1 stail start;_mksc scr stail reload-or-restart;_mksc scR stail restart;sc0(){ SC="${1:-${SC}}";systemctl stop "$SC";scs;};[ -f /usr/share/bash-completion/completions/systemctl ]&&. /usr/share/bash-completion/completions/systemctl;[ -f /usr/share/bash-completion/completions/journalctl ]&&. /usr/share/bash-completion/completions/journalctl
 uptime;free -m;cat /etc/os-release;h 10;screen -ls 2>/dev/null;echo $SSH_AUTH_SOCK