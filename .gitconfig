[core]
	excludesfile = ~/.kkrc/.gitignore
	quotePath = false

[color]
	ui = auto
	diff = auto
	status = auto
	branch = auto

[diff]
	rename = copy

[alias]
	st = status
	ci = commit
	co = checkout
	br = branch
	d = diff
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative
	# Or, before 1.8.3 (Damn, CentOS, it's 2014!): l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ll = log --all --graph --decorate --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset %n' --abbrev-commit --date=relative
	glog = log --all --graph --decorate --pretty=oneline --abbrev-commit
	wdiff = difftool -t wdiff

[push]
	default = matching
	followTags = true
[init]
	defaultBranch = main

[gpg]
	format = ssh

[difftool "wdiff"]
	cmd = wdiff "$LOCAL" "$REMOTE" | vim -c ':set ft=wdiff' -

# Enable these to sign commits with your SSH key for GitHub.
# edit the  name/email pairs, then use:
#	git rebase -i HEAD~n
# where n is the number of commits to re-sign, and then keep repeating:
#	git commit --amend -S
#	git rebase --continue
#
#[user]
#	name = user
#	email = user@example.com
#
#[committer]
#	name = user
#	email = user@example.com
#
#[commit]
#	gpgsign = true
