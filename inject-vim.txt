:set nobackup nocompatible incsearch hlsearch showmatch autoindent virtualedit=block encoding=utf8 wildmenu wildmode=list:longest laststatus=2 noruler modeline showcmd nocursorline viminfo= foldopen=hor,insert,undo mouse=a backspace=indent,eol,start complete-=i smarttab nrformats-=octal scrolloff=1 sidescrolloff=5 display+=lastline listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+ formatoptions+=j autoread history=1000 tabpagemax=50 sessionoptions-=options
:syntax enable
:silent! set cryptmethod=blowfish
:silent! set cryptmethod=blowfish2
:silent! set cryptmethod=xchacha20
:silent! set cryptmethod=xchacha20v2
:filetype plugin indent on
:let g:netrw_preview=1
:nmap <silent> _ :Texplore<cr>
:nmap <silent> - :execute exists("w:netrw_rexlocal")?":Rexplore":":Explore"<cr>
:map <c-j> j<c-e>
:map <c-k> k<c-y>
:nmap <silent> <c-tab> :tabnext<cr>
:nmap <silent> <s-c-tab> :tabprevious<cr>
:map <leader>= viW"zyA = <esc>"=<c-r>z<cr>p
:if has('terminal') tmap <esc><esc> <c-\><c-N> | map <leader><leader> :vertical below terminal<cr> | map <leader>\| :tab terminal<cr> | endif
:nmap <leader>c :lchdir <c-r>=expand('%:p:h')<cr><cr>
:nmap <leader>C :chdir <c-r>=expand('%:p:h')<cr><cr>
:nmap <silent> <leader>l :setlocal list<cr>
:nmap <silent> <leader>L :setlocal nolist<cr>
:nmap <silent> <leader>p :setlocal paste<cr>
:nmap <silent> <leader>P :setlocal nopaste<cr>
:nmap <silent> <leader>v :setlocal virtualedit=all<cr>
:nmap <silent> <leader>V :setlocal virtualedit=block<cr>
:nmap <silent> <leader>e :setlocal expandtab<cr>
:nmap <silent> <leader>E :setlocal noexpandtab<cr>
:nmap <silent> <leader>w :setlocal nowrap<cr>
:nmap <silent> <leader>W :setlocal wrap<cr>
:nmap <silent> <leader>d :set filetype=markdown<cr>
:nmap <silent> <leader>D :doautocmd FileType<cr>
:nmap <silent> <leader>m :set mouse=a<cr>
:nmap <silent> <leader>M :set mouse=<cr>
:nmap <silent> <leader>r :set relativenumber<cr>
:nmap <silent> <leader>R :set norelativenumber<cr>
:nmap <silent> <leader>s :set scrollbind<cr>
:nmap <silent> <leader>S :set noscrollbind<cr>
:nmap <leader>tf :TableModeRealign<cr>:TableEvalFormulaLine<cr>
:nmap <leader>tb :TagbarToggle<cr>
:nmap <leader>2 :setlocal sw=2 ts=2<cr>
:nmap <leader>4 :setlocal sw=4 ts=4<cr>
:nmap <leader>8 :setlocal sw=8 ts=8<cr>
:nmap <leader>dt O# <C-R>=strftime("%Y-%m-%d")<cr><esc><cr>
:nmap <silent> <c-n> :tabnext<cr>
:nmap <silent> <c-p> :tabprevious<cr>
:nmap <silent> <leader>, :tabmove -1<cr>
:nmap <silent> <leader>. :tabmove +1<cr>
:nmap <leader>x :close<cr>
:nmap <silent> <leader>[ :bprevious<cr>
:nmap <silent> <leader>] :bnext<cr>
:nmap <silent> <leader>h1 :call matchadd("DiffText", expand("<cword>"))<cr>
:nmap <silent> <leader>h2 :call matchadd("DiffDelete", expand("<cword>"))<cr>
:nmap <silent> <leader>h3 :call matchadd("DiffAdd", expand("<cword>"))<cr>
:nmap <silent> <leader>h4 :call matchadd("DiffChange", expand("<cword>"))<cr>
:nmap <silent> <leader>h5 :call matchadd("Error", expand("<cword>"))<cr>
:nmap <silent> <leader>h6 :call matchadd("Todo", expand("<cword>"))<cr>
:nmap <silent> <leader>h7 :call matchadd("Folded", expand("<cword>"))<cr>
:nmap <silent> <leader>h8 :call matchadd("PMenu", expand("<cword>"))<cr>
:nmap <silent> <leader>h9 :call matchadd("PMenuSel", expand("<cword>"))<cr>
:nmap <silent> <leader>h0 :call clearmatches()<cr>
:nmap <silent> <leader>/ :nohlsearch<cr>
:nmap <space> za
:nmap <s-space> zA
:nmap + zA
:let base16colorspace=256
:set background=dark
:syn on
:set statusline=%n%m%h%r\ %f\ [%{strlen(&fenc)?&fenc:'none'},%{&ff}]\ %{&list?'LIST\ ':''}%{&linebreak?'TEXTMODE\ ':''}%{&scrollbind?'SCROLLBIND\ ':''}%{&scrollbind?'SCROLLBIND\ ':''}%{&expandtab?'EXPANDTAB\ ':''}%{&wrap?'':'NOWRAP\ '}%{&paste?'PASTE\ ':''}%{&virtualedit=='all'?'VIRTUALEDIT\ ':''}%{strlen(&mouse)?'MOUSE\ ':''}%y%=C:%c%V\ L:%l/%L\ %p%%
:autocmd BufReadPost * exe "normal! g`\""
:autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
:autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
:let g:markdown_fenced_languages=['yaml', 'json', 'xml', 'python', 'bash', 'sh', 'javascript', 'js=javascript', 'c', 'go', 'golang=go', 'java', 'sql']
:let g:markdown_folding=1
:autocmd FileType markdown setlocal foldlevel=99
:autocmd FileType markdown syn match Todo "\<XXX\>"
:autocmd FileType netrw nmap <buffer> <space> mf
:let g:copilot_enabled = v:false
:nmap <leader>g :Copilot enable<cr>
:nmap <leader>G :Copilot disable<cr>
:nmap <leader><c-g> :Copilot status<cr>
:let g:vim_ai_roles_config_file = '~/.vim/ai-models.ini'"
:map <leader>a :AIC<cr>
:nmap <leader>A :AIStopChat<cr>
:echo "vim ok"
